#!/usr/bin/env python3
import logging

import click

from wildfire.goes import downloader

DATETIME_FORMATS = ["%Y-%m-%dT%H:%M:%S"]

logging.basicConfig(level=logging.INFO)
_logger = logging.getLogger(__name__)


@click.command()
@click.argument("satellite", type=click.Choice(["noaa-goes16", "noaa-goes17"]))
@click.argument("region", type=click.Choice(["M1", "M2", "C", "F"], str))
@click.argument("start", type=click.DateTime(formats=DATETIME_FORMATS))
@click.argument("end", type=click.DateTime(formats=DATETIME_FORMATS))
@click.argument("persist_directory", type=click.Path(exists=True, file_okay=False))
def download(satellite, region, start, end, persist_directory):
    """Download all channels from GOES data fulfilling parameters.

    `bin/download_satellite_data noaa-goes17 M1 2019-01-01T01:00:00 2019-02-01T01:11:00 downloaded_data`

    SATELLITE must be in the set (noaa-goes16, noaa-goes16). e.g. noaa-goes16\n
    REGION must be in the set (M1, M2, F, C). e.g. M1\n
    START must be in the following format: YYYY-MM-DDTHH:MM:SS. e.g. 2019-01-01T10:55:30\n
    END must be in the following format: YYYY-MM-DDTHH:MM:SS. e.g. 2019-01-01T10:55:30\n
    PERSIST_DIRECTORY is a path to a local directory at which to persist scans. Directory
    must already exist. e.g. ./downloaded_data\n
    """
    _logger.info(
        """Downloading available GOES satellite data fulfilling parameters:
    Satellite: %s
    Regions: %s
    Channels: %s
    Start Time: %s
    End Time: %s""",
        satellite,
        region,
        list(range(1, 17)),
        start,
        end,
    )
    downloader.download_files(
        local_directory=persist_directory,
        satellite=satellite,
        region=region,
        start_time=start,
        end_time=end,
    )
    _logger.info("Success.")


if __name__ == "__main__":
    download()
